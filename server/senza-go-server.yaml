SenzaInfo:
  StackName: go-server
  Parameters:
  - DockerImage:
      Description: go-server Docker image to use.
  - HostedZone:
      Description: Domain to setup for this go-server.
  - SSLCertificateId:
      Description: The SSL certificate to use on the load balancer.
  - AvailabilityZone:
      Description: The availability zone in which the date EBS is created.
  - InstanceType:
      Description: AWS instance type of your go-server.

SenzaComponents:
- Configuration:
    Type: Senza::StupsAutoConfiguration

Resources:
  GoServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
      - "{{Arguments.AvailabilityZone}}"
      LaunchConfigurationName:
        Ref: "GoServerLaunchConfig"
      MinSize: 1
      MaxSize: 1
      LoadBalancerNames:
      - Ref: "GoServerLoadBalancer"
      CreationPolicy:
        ResourceSignal:
          Timeout: "PT15M"
          Count: "1"

  GoServerLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      UserData:
        "Fn::Base64": "#taupage-ami-config
runtime: Docker
source: '{{Arguments.DockerImage}}'
ports:
  8153: 8153
volumes:
  ebs:
    /dev/sdf: go-server-volume
mounts:
  /var/lib/go-server:
    partition: /dev/xvdf
    erase_on_boot: false
"
      InstanceType: "{{Arguments.InstanceType}}"
      IamInstanceProfile: "go-server-profile"
      SecurityGroups:
      - Ref: "GoServerSecurityGroup"

  GoServerLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      LoadBalancerName: "GoServerLoadBalancer"
      AvailabilityZones:
      - "{{Arguments.AvailabilityZone}}"
      Listeners:
      - LoadBalancerPort: "443"
        InstancePort": "8153"
        Protocol": "HTTPS"
        SSLCertificateId: "{{Arguments.SSLCertificateId}}"
      SecurityGroups:
      - Ref: "GoLoadBalancerSecurityGroup"

  GoLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: go-server load balancer security group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

  GoServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: go-server security group
      SecurityGroupIngress:
      # for debugging via piu
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      # HTTP from load balancer
      - IpProtocol: tcp
        FromPort: 8153
        ToPort: 8153
        SourceSecurityGroupId:
          Ref: GoLoadBalancerSecurityGroup

  GoServerDomain:
    Type: "AWS::Route53::RecordSet"
    Properties:
      Name: "delivery.{{Arguments.HostedZone}}."
      HostedZoneName: "{{Arguments.HostedZone}}."
      Type: "CNAME"
      ResourceRecords:
      - "Fn::GetAtt":
        - "GoServerLoadBalancer"
        - "DNSName"
      TTL: 30

